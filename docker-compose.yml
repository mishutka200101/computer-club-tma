version: '3.8'

services:
  postgres:
    image: postgres:alpine
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./pgdata/:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - network
  
  api:
    build: ./api
    container_name: api_app
    ports:
      - "8000:8000"
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_DB=${POSTGRES_DB}
    depends_on:
      - postgres
    volumes:
      - ./api:/app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health/check | grep '\"status\":\"ok\"' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - network
  
  frontend:
    build: ./frontend
    container_name: frontend_app
    ports:
      - "4173:4173"
    environment:
      - NODE_ENV=production
    depends_on:
      - api
    networks:
      - network

networks:
  network: